{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","style","height","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","onClick","toggleMode","width","cursor","htmlFor","TextForm","useState","text","setText","heading","onChange","e","target","value","rows","disabled","length","showAlert","navigator","clipboard","writeText","newText","split","join","document","getElementById","color","filter","element","defaultProps","App","setAlert","cls","console","log","body","classList","add","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.295a138b.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height: '50px'}}>\n            {props.alert &&\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n                <strong>{capitalize(props.alert.type)}! </strong> {props.alert.msg}\n            </div>}\n        </div>\n    )\n}\n","import PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\n                            {/* <a className=\"nav-link\" href=\"/about\">About</a> */}\n                        </li>\n                    </ul>\n                    <div className=\"d-flex\">\n                        <div className=\"bg-primary rounded m-2\" onClick={() => props.toggleMode('primary')} style={{height: '30px', width: '30px', cursor: 'pointer'}}></div>\n                        <div className=\"bg-success rounded m-2\" onClick={() => props.toggleMode('success')} style={{height: '30px', width: '30px', cursor: 'pointer'}}></div>\n                        <div className=\"bg-warning rounded m-2\" onClick={() => props.toggleMode('warning')} style={{height: '30px', width: '30px', cursor: 'pointer'}}></div>\n                        <div className=\"bg-danger rounded m-2\" onClick={() => props.toggleMode('danger')} style={{height: '30px', width: '30px', cursor: 'pointer'}}></div>\n                    </div>\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark': 'light'}`}>\n                        <input className=\"form-check-input\" onClick={() => props.toggleMode(null)} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nNavbar.defaultProps = {\n    title: \"Navbar\",\n}\n\n","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n    const [text, setText] = useState('');\n\n    const handleUpClick = () =>{\n        // console.log(\"UpperCase was clicked\");\n        setText(text.toUpperCase())\n        props.showAlert(\"Coverted to uppercase\", 'success');\n    }\n    const handleLowClick = () =>{\n        // console.log(\"UpperCase was clicked\");\n        setText(text.toLowerCase())\n        props.showAlert(\"Coverted to lowercase\", 'success');\n    }\n\n    const handleCopy = ()=>{\n        // let textBox = document.getElementById('myBox')\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Text has been successfully copied.\", 'success');\n    }\n\n    const handleExtraSpaces = () =>{\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra Spaces removed successfully\", 'success');\n\n    }\n\n    const handleClearText = () => {\n        setText(\"\");\n        props.showAlert(\"Text successfully Removed\", 'success');\n    }\n\n    const handlOnChange = (e) =>{\n        // console.log(\"On change\");\n        setText(e.target.value)\n\n    }\n\n    const handleChangeColor = (e)=>{\n        document.getElementById('myBox').style.color = e.target.value;\n    }\n\n    \n    return (\n        <>\n        <div className='container my-3'>\n            <h2 className='my-3'>{props.heading}</h2>\n            <div className=\"mb-3\">\n                <textarea className=\"form-control\" onChange={handlOnChange} id=\"myBox\" rows=\"5\" value={text}></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Text to uppercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Text to lower</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1\" onClick={handleClearText}>Clear Text</button>\n            <input type=\"color\" className=\"form-control-color\" onChange={handleChangeColor} />\n            \n\n        </div>\n        <div className=\"container my-2\">\n            <h3 style={{color: \"red\"}}>Your text summary</h3>\n            <p>{text.split(/\\s+/).filter((element) => {return element.length !== 0}).length} words, {text.length} characters</p>\n            <p>{0.008 * text.split(\" \").filter((element) => {return element.length !== 0}).length} Minutes read.</p>\n            <h4>Preview</h4>\n            <p>{text.length>0? text: 'Noting to preview'}</p>\n        </div>\n        </>\n    )\n}\n\n\n\n\n","import React, { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light') //check whether dark mode is enable or not.\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n\n  }\n\n  const toggleMode = (cls) => {\n    console.log(cls);\n    document.body.classList.add(`bg-${cls}`)\n    // if (mode === 'light') {\n    //   setMode('dark');\n    //   document.body.classList.add('bg-secondary');\n    //   showAlert(\"Dark mode has been enabled\", 'success');\n    //   document.title = 'Textutils - Dark Mode';\n    \n    // } else {\n    //   setMode('light');\n    //   document.body.classList.remove('bg-secondary');\n    //   showAlert(\"light mode has been enabled\", 'success');\n    // }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        {/* <Routes> */}\n          {/* <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" />} /> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" />\n          {/* <Route exact path=\"/about\" element={<About mode={mode} />} /> */}\n        {/* </Routes> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}